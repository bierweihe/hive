(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{447:function(a,t,s){"use strict";s.r(t);var n=s(2),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"java常用类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java常用类"}},[a._v("#")]),a._v(" Java常用类")]),a._v(" "),t("h3",{attrs:{id:"日历类java-util-calendar的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日历类java-util-calendar的特点"}},[a._v("#")]),a._v(" 日历类Java.util.Calendar的特点")]),a._v(" "),t("ul",[t("li",[a._v("#该类为抽象类，里面由许多关于日历日期的方法")])]),a._v(" "),t("h3",{attrs:{id:"calendar类创建实例对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#calendar类创建实例对象"}},[a._v("#")]),a._v(" Calendar类创建实例对象")]),a._v(" "),t("ul",[t("li",[a._v("使用getInstance()方法，默认时区和区域获取当前系统事件，该方法为静态方法，\n"),t("ul",[t("li",[a._v("Calendar c = Calendar.getInstance();")])])]),a._v(" "),t("li",[a._v("实例方法：\n"),t("ul",[t("li",[a._v("toString()，")]),a._v(" "),t("li",[a._v("add()")]),a._v(" "),t("li",[a._v("get(int feild)")]),a._v(" "),t("li",[a._v("getActualMaxinmum(int feild)")]),a._v(" "),t("li",[a._v("getActualMinmum(int feild)")])])]),a._v(" "),t("li",[a._v("静态方法：getInstance()")]),a._v(" "),t("li")]),a._v(" "),t("h3",{attrs:{id:"calendar类中add方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#calendar类中add方法"}},[a._v("#")]),a._v(" Calendar类中add方法")]),a._v(" "),t("ul",[t("li",[a._v("abstract add(int feild,int amount)将指定的时间量（YEAR,MONTH,DATE）添加或减去给定的日历字段。")])]),a._v(" "),t("h3",{attrs:{id:"calendar类中的get方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#calendar类中的get方法"}},[a._v("#")]),a._v(" Calendar类中的get方法")]),a._v(" "),t("ul",[t("li",[a._v("int get(int field),通过日历对象获取当前对应时间量")]),a._v(" "),t("li",[a._v("getActualMaxinmum(int feild),获取本（月，周）第一个，getActualMinmum则相反。")])]),a._v(" "),t("h2",{attrs:{id:"date是指哪个类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#date是指哪个类"}},[a._v("#")]),a._v(" Date是指哪个类")]),a._v(" "),t("ul",[t("li",[a._v("java.util.Date,日期类，主要掌握\n"),t("ul",[t("li",[a._v("任何获得系统当前时间")]),a._v(" "),t("li",[a._v("String->Date")]),a._v(" "),t("li",[a._v("Date->String")])])])]),a._v(" "),t("h3",{attrs:{id:"java获取系统当前时间-精确到毫秒"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java获取系统当前时间-精确到毫秒"}},[a._v("#")]),a._v(" java获取系统当前时间（精确到毫秒）")]),a._v(" "),t("ul",[t("li",[a._v("使用构造方法Date()创建对象：")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),a._v(" nowDate "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("nowDate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ntoString已被重写，可以通过"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDateFormat")]),a._v("来改变输出样式\n")])])]),t("h3",{attrs:{id:"simpledateformat类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simpledateformat类"}},[a._v("#")]),a._v(" SimpleDateFormat类")]),a._v(" "),t("ul",[t("li",[a._v("专门负责日期格式化的类，java.text.SimpleDateFormat")]),a._v(" "),t("li",[a._v("日期格式代表字符：\n"),t("ul",[t("li",[a._v("yyyy年，MM月，dd日，HH时，mm分，ss秒，SSS毫秒，除了以上字符不可更改其他皆可更改")])])]),a._v(" "),t("li",[a._v("获取一种日期格式的对象：")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDateFormat")]),a._v(" sdf1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDateFormat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yyyy-MM-dd HH:mm:ss"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[a._v("将Date对象转换为String对象方便输出，")]),a._v(" "),t("li",[a._v("format()是将Date--\x3eString的方法")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" nowDateStr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sdf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("nowDate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("nowDateStr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[a._v("将日期字符串转换为日期对象；")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" time08 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2008年08月8日 08时08分08秒 888毫秒"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//日期格式")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDateFormat")]),a._v(" sdf "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDateFormat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yyyy年MM月dd日 HH时mm分ss秒 SSS毫秒"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//用此模板来转换String为Date")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),a._v(" date08 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sdf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("time08"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("date08"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("ul",[t("li",[a._v("注意：格式如果不一样会发生，解析异常")])]),a._v(" "),t("h2",{attrs:{id:"system类的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system类的特点"}},[a._v("#")]),a._v(" System类的特点")]),a._v(" "),t("ul",[t("li",[a._v("System类提供的设施包括标准输入，标准输出和错误输出流; 访问外部定义的属性和环境变量; 一种加载文件和库的方法; 以及用于快速复制阵列的一部分的实用方法。")]),a._v(" "),t("li",[a._v("本身被final修饰，不能被实例化")])]),a._v(" "),t("h3",{attrs:{id:"system类中属性-皆为静态的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system类中属性-皆为静态的"}},[a._v("#")]),a._v(" System类中属性(皆为静态的)")]),a._v(" "),t("ul",[t("li",[a._v("static PrintStream in/out/err")]),a._v(" "),t("li",[a._v("分别为标准输入/输出/错误流")])])])}),[],!1,null,null,null);t.default=e.exports}}]);